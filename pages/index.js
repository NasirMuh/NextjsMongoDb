import Head from 'next/head'
import { useState } from 'react'
import styles from '../styles/Home.module.css'
import Test from "../models/testModel"
import connectMongo from '../utils/connectMongo';
import { useRouter } from 'next/router';
import Hell from './Hell';

export default function Home({ test }) {

  const router = useRouter();
  const createTest = async () => {
    const rondomNumber = Math.floor(Math.random() * 1000)
    const res = await fetch("/api/test", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        name: `Test  ${rondomNumber}`,
        email: `Nasir ${rondomNumber}@test.com`
      })
    })
    const data = await res.json()
    router.push('/')
  }
  const DeleteData = async (_id) => {
    const res = await fetch(`/api/test/${_id}`, {
      method: "DELETE"
    })
    const data = await res.json()
    router.push('/')
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Using Api</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Hell />
      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to Next.js And Mongoose
        </h1>
        <div className={styles.grid}>

          {
            test?.map((userDatatest) => {
              return <div key={userDatatest._id} className={styles.card} onClick={() => DeleteData(userDatatest._id)}>
                <h2>Name : {userDatatest.name} &rarr;</h2>
                <p>Email : {userDatatest.email}</p>
              </div>
            })
          }
        </div>
        <button onClick={createTest}>Create</button>
      </main>
    </div>
  )
}
export const getServerSideProps = async () => {
  try {
    await connectMongo()
    const test1 = await Test.find()
    return {
      props: {
        test: JSON.parse(JSON.stringify(test1))
      }
    }
  } catch (error) {
    console.log("Inside of props" + error)
  }
}